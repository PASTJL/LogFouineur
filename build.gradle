/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
defaultTasks 'build' , 'copyTask1', 'copyTask2', 'createJavadocs'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
  
   
}
ext {
    
	moduleName = 'org.jlp.logfouineur'
    javaCompilerExecutable = System.env['JAVA_HOME'] ? System.env['JAVA_HOME'] + '/bin/javac' : 'javac'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
   // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
   // implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
     testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0")
      compile fileTree(dir: 'libExt', include: ['*.jar'])
}

sourceSets.main.resources { srcDirs = ["src/main/java"]; exclude "**/*.java" }
ext.moduleName = 'org.jlp.javafx' 
sourceCompatibility = 1.9
targetCompatibility = 1.9
compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
        	'--add-modules=ALL-SYSTEM', '--module-path', classpath.asPath,'-Xlint:unchecked', '-Xlint:unchecked','-Xlint:deprecation',
        ]
        classpath = files()  
    }
      options.fork = true
     
      
}
task copyTask1(type: Copy) {
    from './build/libs/logfouineur.jar'
    into './libs/'
    }

task copyTask2(type: Copy) {
    from './build/docs/javadoc'
    into './javadoc/'
}

sourceSets {
    build {
        java.srcDir file('src/main/java')
		main.resources { srcDirs = ["src/main/resources","src/main/java"] }
    }
}
task createJavadocs (type : Javadoc) {

   source = sourceSets.main.allJava
exclude 'module-info.java'
    classpath = configurations.compile
    
     options.memberLevel = JavadocMemberLevel.PUBLIC
}
test {
systemProperties = [
        'root': '/opt/workspace47/logfouineur'
    ]
  // exclude 'org/jlp/javafx/datas/AggDataDatedTest*','org/jlp/javafx/datas/csv/CSVLine*'
  
    }
   

